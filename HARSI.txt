//@version=5
strategy("Stochastic RSI + Scaled Heikin Ashi Strategy", overlay=false, default_qty_type=strategy.percent_of_equity, default_qty_value=100)

// === Inputs === //
bottom = input.int(-30, "Bottom Level")
middle_low = input.int(-20, "Lower Mid Level")
middle_high = input.int(20, "Upper Mid Level")
top = input.int(30, "Top Level")

bottom_color = input.color(color.new(color.green, 85), "Bottom Zone Color")
middle_color = input.color(color.new(color.blue, 85), "Middle Zone Color")
top_color = input.color(color.new(color.red, 85), "Top Zone Color")

lengthRSI = input.int(14, "RSI Length")
lengthStoch = input.int(14, "Stochastic Length")
smoothK = input.int(3, "Smooth K")
smoothD = input.int(3, "Smooth D")

max_ha_cross = input.int(10, "Maximum Level HA Cross RSI Threshold")

// === Heikin Ashi Calculation === //
var float ha_open = na
ha_close = (open + high + low + close) / 4
ha_open := na(ha_open[1]) ? open : (ha_open[1] + ha_close[1]) / 2
ha_high = math.max(high, math.max(ha_open, ha_close))
ha_low = math.min(low, math.min(ha_open, ha_close))

// === Scaling === //
window = 100
min_val = ta.lowest(ha_low, window)
max_val = ta.highest(ha_high, window)
scale = 60.0 / (max_val - min_val)

ha_open_scaled = (ha_open - min_val) * scale + bottom
ha_close_scaled = (ha_close - min_val) * scale + bottom
ha_high_scaled = (ha_high - min_val) * scale + bottom
ha_low_scaled = (ha_low - min_val) * scale + bottom

// === RSI and Stochastic RSI === //
rsi = ta.rsi(close, lengthRSI)
rsi_min = ta.lowest(rsi, lengthStoch)
rsi_max = ta.highest(rsi, lengthStoch)
stochRSI = (rsi - rsi_min) / (rsi_max - rsi_min)

k = ta.sma(stochRSI, smoothK)
d = ta.sma(k, smoothD)

// Rescale %K and %D from [0, 1] to [-40, 40]
k_scaled = k * 80 - 40
d_scaled = d * 80 - 40

// === Entry Condition === //
isRising = k_scaled > k_scaled[1]
crossAboveHA = ta.crossover(k_scaled, ha_close_scaled)
longCondition = isRising and crossAboveHA and (ha_close_scaled < max_ha_cross)

// === Exit Condition === //
crossBelowD = ta.crossunder(k_scaled, d_scaled)
aboveThreshold = k_scaled > 30 and d_scaled > 30
exitCondition = crossBelowD and aboveThreshold

// === Strategy Orders === //
if (longCondition)
    strategy.entry("Long", strategy.long)

if (exitCondition)
    strategy.close("Long")

// === Plot Scaled Thick Heikin Ashi Candles === //
body_color = ha_close_scaled > ha_open_scaled ? color.green : color.red
offset = 0.2


// === Plotting === //
plot(k_scaled, color=color.blue, title="%K (scaled)")
plot(d_scaled, color=color.orange, title="%D (scaled)")
plot(ha_close_scaled, color=color.gray, title="HA Close Scaled", linewidth=1)
hline(30, "Exit Threshold", color=color.gray, linestyle=hline.style_dashed)

plotcandle(ha_open_scaled, ha_high_scaled, ha_low_scaled, ha_close_scaled,
     title="HA Candle",
     color=body_color,
     wickcolor=color.gray,
     bordercolor=body_color)

plotcandle(ha_open_scaled + offset, ha_high_scaled + offset, ha_low_scaled + offset, ha_close_scaled + offset,
     title="HA Candle Bold",
     color=body_color,
     wickcolor=color.new(color.gray, 50),
     bordercolor=body_color)

// === Plot Level Lines === //
hline(bottom, "Bottom", color=color.gray, linestyle=hline.style_dotted)
hline(middle_low, "Middle Low", color=color.gray, linestyle=hline.style_dotted)
hline(middle_high, "Middle High", color=color.gray, linestyle=hline.style_dotted)
hline(top, "Top", color=color.gray, linestyle=hline.style_dotted)

// === Plot Horizontal Zones with box.new() === //
var box bottom_zone = na
var box middle_zone = na
var box top_zone = na

if bar_index == 1
    bottom_zone := box.new(left=bar_index, right=bar_index, top=middle_low, bottom=bottom, bgcolor=bottom_color, border_color=na, extend=extend.both)
    middle_zone := box.new(left=bar_index, right=bar_index, top=middle_high, bottom=middle_low, bgcolor=middle_color, border_color=na, extend=extend.both)
    top_zone := box.new(left=bar_index, right=bar_index, top=top, bottom=middle_high, bgcolor=top_color, border_color=na, extend=extend.both)